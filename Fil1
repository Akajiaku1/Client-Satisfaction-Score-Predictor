import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Generate Synthetic Data
np.random.seed(42)
n_samples = 1000

data = {
    'Response_Time_Minutes': np.random.normal(15, 5, n_samples).clip(5, 40),
    'Service_Quality': np.random.randint(1, 6, n_samples),  # 1 to 5 scale
    'Product_Quality': np.random.randint(1, 6, n_samples),
    'Issue_Resolved': np.random.choice([0, 1], n_samples, p=[0.2, 0.8]),  # 0=No, 1=Yes
    'Customer_Loyalty_Years': np.random.randint(0, 10, n_samples),
    'Support_Interactions': np.random.randint(1, 15, n_samples),
}

df = pd.DataFrame(data)

# Simulate the satisfaction score (target) between 0-10
df['Satisfaction_Score'] = (
    10
    - 0.05 * df['Response_Time_Minutes']
    + 0.7 * df['Service_Quality']
    + 0.5 * df['Product_Quality']
    + 2.0 * df['Issue_Resolved']
    + 0.1 * df['Customer_Loyalty_Years']
    - 0.1 * df['Support_Interactions']
    + np.random.normal(0, 1.0, n_samples)
).clip(0, 10)

# Step 2: Split into train/test
X = df.drop(columns='Satisfaction_Score')
y = df['Satisfaction_Score']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Train the Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 4: Evaluate
y_pred = model.predict(X_test)
print("RÂ² Score:", r2_score(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))

# Step 5: Make Predictions
def predict_satisfaction(response_time, service_quality, product_quality,
                         issue_resolved, loyalty_years, support_interactions):
    input_data = pd.DataFrame([[
        response_time, service_quality, product_quality,
        issue_resolved, loyalty_years, support_interactions
    ]], columns=X.columns)
    return model.predict(input_data)[0]

# Example Prediction
score = predict_satisfaction(10, 4, 5, 1, 3, 4)
print(f"Predicted Satisfaction Score: {score:.2f}")
